def from_bytes (data, big_endian = False):
    if isinstance(data, str):
        data = bytearray(data)
    if big_endian:
        data = reversed(data)
    num = 0
    for offset, byte in enumerate(data):
        num += byte << (offset * 8)
    return num

def uncompress(byte_str, verbose=False):
    # compress data in LZ4 format
    offset = byte_str[0]>>4 #byte_str[0]/16 # >> 4 possible value: 14
    next_backward_length = 4 + byte_str[0] - offset * 16
    pointer = 1
    if offset == 15:
        while byte_str[pointer] == 255:
            pointer += 1
            offset += 255
        offset += byte_str[pointer]
        pointer += 1
    valid_bytes = byte_str[pointer:pointer + offset]
    pointer += offset
    total_len = len(byte_str)

    while pointer < total_len:   
        backward_length = next_backward_length
        #distance = int.from_bytes(byte_str[pointer:pointer + 2], 'little')
        distance = from_bytes(byte_str[pointer:pointer + 2],False)#int(''.join(reversed(byte_str[pointer:pointer + 2])).encode('hex'), 16)
        print(distance)
        pointer += 2
        if backward_length == 19:
            while byte_str[pointer] == 255:
                pointer += 1
                backward_length += 255
            backward_length += byte_str[pointer]
            pointer += 1
        length_info = byte_str[pointer]
        if length_info < 240: # 0b11110000
            pointer += 1
            forward_length = length_info >> 4
            next_backward_length = length_info - forward_length * 16 + 4
        else:
            forward_length = 15
            while byte_str[pointer + 1] == 255:
                pointer += 1
                forward_length += 255
            forward_length += byte_str[pointer + 1]
            next_backward_length = length_info - (length_info >> 4) * 16 + 4
            pointer += 2
        if verbose:
            print(hex(pointer), forward_length)
        if distance == 1:
            for _ in range(backward_length):
                valid_bytes += valid_bytes[-1 :]
        else:
            #print('start@@@')
            #print(distance)
            #print(backward_length)

            while -1 * distance + backward_length > 0:
                print(-1 * distance)
                valid_bytes += valid_bytes[-1 * distance : -1]
                backward_length -= (distance - 1)
            if -1 * distance + backward_length == 0:
                valid_bytes += valid_bytes[-1 * distance :]
            else:
                valid_bytes += valid_bytes[-1 * distance : -1 * distance + backward_length]
        if forward_length > 0:
            valid_bytes += byte_str[pointer: pointer + forward_length]
        pointer += forward_length
        if verbose:
            try:
                print(valid_bytes.decode('utf-8'))
            except:
                pdb.set_trace()
    try:
        return valid_bytes.decode('utf-8')
    except:
        #open('a3.bin', 'wb').write(byte_str)
        print(valid_bytes)
        valid_bytes.decode('utf-8')

list2 = bytearray([242, 75, 60, 63, 120, 109, 108, 32, 118, 101, 114, 115, 105, 111, 110, 61, 34,49, 46, 48, 34, 63, 62, 10, 60, 109, 115, 103, 62, 10, 9, 60, 97, 112, 112, 109, 115, 103, 32, 97, 112, 112, 105, 100, 61, 34, 34, 32, 115, 100, 107, 118, 101,114, 61, 34, 48, 34, 62, 10, 9, 9, 60, 116, 105, 116, 108, 101, 62, 229, 145, 128, 239, 188, 140, 232, 191, 153, 230, 152, 175, 230, 128, 142, 228, 185, 136, 228, 186, 134, 60, 47, 29, 0, 0, 39, 0, 81, 100, 101, 115, 32, 47, 49, 0, 99, 97,99, 116, 105, 111, 110, 13, 0, 145, 116, 121, 112, 101, 62, 53, 55, 60, 47, 9, 0, 0, 41, 0, 65, 115, 104, 111, 119, 13, 0, 53, 48, 60, 47, 12, 0, 1, 25, 0, 69,111, 117, 110, 100, 26, 0, 5, 13, 0, 0, 27, 0, 195, 109, 101, 100, 105, 97, 116, 97, 103, 110, 97, 109, 101, 89, 0, 170, 109, 101, 115, 115, 97, 103, 101, 101,120, 116, 17, 0, 9, 126, 0, 100, 99, 111, 110, 116, 101, 110, 34, 0, 3, 14, 0, 136, 97, 116, 116, 114, 62, 48, 60, 47, 15, 0, 0, 101, 0, 51, 117, 114, 108, 75,0, 54, 108, 111, 119, 13, 0, 70, 100, 97, 116, 97, 14, 0, 58, 108, 111, 119, 17, 0, 150, 115, 111, 110, 103, 97, 108, 98, 117, 109, 36, 0, 0, 19, 0, 83, 108, 121, 114, 105, 99, 79, 0, 144, 97, 112, 112, 97, 116, 116, 97, 99, 104, 31, 1, 160, 9, 60, 116, 111, 116, 97, 108, 108, 101, 110, 132, 0, 5, 12, 0, 1, 26, 0, 2, 38, 0, 34, 105, 100, 56, 0, 248, 1, 9, 60, 101, 109, 111, 116, 105, 99, 111, 110, 109, 100, 53, 62, 60, 47, 14, 0, 1, 47, 0, 54, 102, 105, 108, 0, 1, 244, 1, 9,60, 99, 100, 110, 116, 104, 117, 109, 98, 97, 101, 115, 107, 101, 121, 68, 0, 2, 14, 0, 51, 62, 60, 47, 9, 0, 0, 234, 0, 25, 47, 146, 0, 130, 60, 101, 120, 116, 105, 110, 102, 111, 50, 0, 0, 135, 1, 119, 114, 99, 101, 117, 115, 101, 114, 110, 1, 2, 21, 0, 119, 100, 105, 115, 112, 108, 97, 121, 24, 0, 1, 113, 0, 6, 250, 0, 52, 109, 100, 53, 70, 0, 147, 116, 97, 116, 101, 120, 116, 115, 116, 114, 17, 0, 161, 100, 105, 114, 101, 99, 116, 115, 104, 97, 114, 250, 1, 8, 15, 0, 0, 147, 0, 82, 114, 101, 102, 101, 114, 145, 2, 0, 116, 2, 0, 54, 2, 22, 51, 53, 2,242, 14, 9, 60, 115, 118, 114, 105, 100, 62, 57, 49, 53, 51, 52, 50, 49, 51, 56, 56, 54, 49, 50, 55, 51, 48, 51, 48, 53, 60, 47, 27, 0, 1, 56, 0, 244, 15, 102,114, 111, 109, 117, 115, 114, 62, 51, 57, 49, 55, 56, 53, 50, 50, 53, 52, 48, 64, 99, 104, 97, 116, 114, 111, 111, 109, 60, 47, 30, 0, 1, 43, 0, 0, 23, 0, 0, 43, 0, 244, 6, 119, 120, 105, 100, 95, 99, 54, 114, 48, 106, 57, 101, 52, 121, 115, 51, 98, 50, 49, 60, 47, 29, 0, 1, 42, 0, 7, 246, 0, 240, 1, 62, 232, 138, 177, 232, 144, 189, 233, 155, 168, 233, 149, 191, 229, 174, 137, 200, 0, 5, 19, 1, 2, 222, 1, 3, 86, 2, 95, 62, 38, 108, 116, 59, 119, 3, 0, 80, 38, 103, 116, 59, 10, 28, 0, 49, 109, 115, 103, 12, 0, 16, 9, 13, 0, 66, 105, 109, 103, 32, 160, 1, 241, 26, 61, 34, 101, 99, 52, 98, 99, 48, 53, 98, 98, 98, 52, 102, 100, 52, 53, 98, 48, 48, 51, 51, 55, 52, 51, 101, 57, 55, 54, 100, 102, 101, 98, 101, 34, 32, 101, 110, 99, 114, 121, 163, 3, 58, 49, 34, 32, 246, 1, 15, 63, 0, 17, 4, 50,0, 243, 8, 117, 114, 108, 61, 34, 51, 48, 53, 55, 48, 50, 48, 49, 48, 48, 48, 52, 52, 98, 51, 48, 52, 57, 14, 0, 241, 6, 50, 48, 52, 57, 55, 52, 57, 55, 97, 54, 51, 48, 50, 48, 51, 50, 100, 102, 54, 99, 102, 22, 0, 97, 50, 100, 97, 54, 100, 100, 12, 0, 241, 23, 54, 52, 52, 101, 49, 100, 102, 51, 48, 52, 50, 52, 54, 54, 54, 50, 51, 48, 51, 55, 51, 56, 51, 51, 51, 57, 51, 57, 50, 100, 51, 52, 54, 54, 51, 55, 51, 48, 10, 0, 113, 51, 51, 48, 51, 53, 50, 100, 36, 0, 240, 14, 50, 51, 55, 50, 100, 54, 52, 54, 53, 54, 54, 51, 49, 54, 52, 51, 57, 54, 50, 51, 56,54, 53, 51, 52, 51, 50, 51, 52, 100, 0, 131, 48, 49, 50, 53, 48, 97, 48, 50, 140, 0, 214, 52, 48, 53, 48, 48, 52, 99, 53, 54, 102, 98, 48, 48, 193, 0, 198, 108, 101, 110, 103, 116, 104, 61, 34, 53, 56, 52, 57, 22, 0, 167, 104, 101, 105, 103, 104, 116, 61, 34, 49, 50, 43, 0, 48, 119, 105, 100, 42, 0, 18, 57, 19, 0, 52,109, 105, 100, 38, 0, 5, 17, 0, 3, 34, 0, 2, 16, 0, 27, 104, 32, 0, 26, 104, 31, 0, 111, 109, 105, 100, 105, 109, 103, 64, 1, 166, 4, 56, 1, 246, 45, 49, 51, 54, 54, 51, 52, 34, 32, 109, 100, 53, 61, 34, 102, 98, 56, 101, 102, 101, 98, 57,100, 99, 55, 101, 98, 48, 54, 52, 50, 57, 53, 57, 51, 102, 57, 100, 48, 98, 54,51, 51, 48, 97, 55, 34, 32, 104, 101, 118, 99, 95, 109, 105, 100, 95, 115, 105,122, 101, 62, 0, 22, 47, 199, 2, 240, 3, 112, 108, 97, 116, 102, 111, 114, 109,95, 115, 105, 103, 110, 97, 116, 117, 114, 101, 28, 0, 0, 225, 2, 31, 47, 27, 0, 3, 32, 10, 9, 29, 0, 48, 105, 109, 103, 84, 5, 69, 104, 97, 115, 104, 48, 0, 11, 20, 0, 1, 51, 3, 20, 47, 52, 3, 5, 188, 5, 2, 115, 3, 50, 109, 115, 103, 160,4, 1, 117, 3, 5, 14, 0, 4, 76, 0, 176, 115, 101, 113, 117, 101, 110, 99, 101, 95, 105, 100, 19, 0, 144, 55, 55, 56, 52, 56, 50, 56, 51, 49, 123, 0, 27, 47, 29,0, 2, 145, 0, 81, 97, 108, 110, 111, 100, 188, 0, 33, 10, 9, 162, 0, 32, 102, 114, 58, 0, 17, 50, 50, 0, 2, 12, 0, 2, 41, 0, 24, 47, 42, 0, 0, 30, 0, 139, 115,101, 99, 95, 109, 115, 103, 95, 64, 0, 35, 117, 117, 124, 0, 240, 17, 49, 51, 55, 57, 52, 52, 98, 102, 56, 99, 101, 101, 51, 55, 48, 48, 53, 56, 56, 100, 57, 54, 102, 51, 101, 52, 57, 102, 56, 53, 50, 95, 68, 0, 20, 47, 46, 0, 2, 83, 0, 30, 47, 84, 0, 0, 38, 0, 48, 115, 105, 108, 213, 0, 0, 152, 0, 3, 202, 0, 6, 17, 0, 2, 34, 0, 176, 109, 101, 109, 98, 101, 114, 99, 111, 117, 110, 116, 38, 0, 34,50, 55, 40, 0, 11, 23, 0, 2, 44, 0, 241, 4, 78, 111, 116, 65, 117, 116, 111, 68, 111, 119, 110, 108, 111, 97, 100, 82, 97, 110, 103, 0, 1, 209, 50, 48, 58, 48,48, 45, 50, 50, 58, 48, 48, 59, 48, 12, 0, 80, 48, 49, 58, 48, 48, 129, 0, 31, 47, 52, 0, 5, 2, 82, 0, 9, 3, 2, 177, 118, 49, 95, 122, 57, 57, 117, 80, 104, 48, 113, 59, 0, 9, 29, 0, 2, 48, 0, 60, 116, 109, 112, 54, 1, 162, 112, 117, 98, 108, 105, 115, 104, 101, 114, 45, 62, 1, 241, 3, 38, 97, 109, 112, 59, 108, 116, 59, 33, 91, 67, 68, 65, 84, 65, 91, 93, 93, 18, 0, 5, 99, 2, 11, 47, 0, 2, 88, 0, 25, 47, 89, 0, 1, 126, 0, 9, 34, 2, 32, 10, 60, 87, 2, 3, 64, 2, 0, 138, 6, 23, 47, 139, 6, 1, 42, 7, 2, 150, 6, 18, 60, 62, 6, 2, 22, 7, 228, 62, 122, 104, 97, 110, 103, 115, 105, 54, 51, 56, 49, 48, 50, 90, 6, 3, 28, 0, 113, 10, 9, 60, 115, 99, 101, 110, 231, 6, 2, 9, 0, 2, 101, 9, 0, 100, 7, 0, 177, 2, 19, 60, 137, 9, 68, 62, 49, 60, 47, 11, 0, 0, 121, 0, 53, 97, 112, 112, 90, 7, 1, 121, 0, 3, 49, 0, 131, 60, 99, 111, 109, 109, 101, 110, 116, 160, 8, 128, 60, 47, 109, 115, 103, 62, 10, 0])	

print(uncompress(list2))

